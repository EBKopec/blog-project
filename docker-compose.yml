version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: blog-api:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./.env:/app/.env

  db:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    image: blog_api_postgres:15
    restart: always

    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 1s
      timeout: 5s
      retries: 10
    command: [ "postgres", "-c", "max_connections=200" ]
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres/initdb:/docker-entrypoint-initdb.d:ro

  migrate:
    image: migrate/migrate
    command: [
      "-path", "/migrations",
      "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable",
      "up"
    ]
    volumes:
      - ./migrations:/migrations
    depends_on:
      - db

volumes:
  pgdata: